-- PROCEDURES
USE COMPANY;
DELIMITER //
CREATE procedure GETALL_EMPLOYEES()
BEGIN
	SELECT * FROM EMPLOYE;
END //
DELIMITER ;
CALL GETALL_EMPLOYEES();

DELIMITER //
CREATE procedure EMPSALARYABOVE8()
BEGIN
	SELECT EMP_NAME FROM EMPLOYE
    WHERE SALARY>80000;
END //
DELIMITER ;
CALL GETALL_EMPSALARYABOVE80K();
CALL EMPSALARYABOVE8();

DELIMITER //
CREATE procedure GETEMPBYIDSS(IN EID int)
BEGIN
	IF EID IS NULL THEN SELECT 'ID IS REQUIRED';
    ELSE SELECT * FROM EMPLOYE 
    WHERE EID= ID;
    END IF;
END //
DELIMITER ;
CALL GETEMPBYIDSS(2);

DELIMITER //
CREATE procedure GETMRBYIDSS(IN MID int)
BEGIN
	IF MID IS NULL THEN SELECT 'ID IS REQUIRED';
    ELSE SELECT * FROM EMPLOYE 
    WHERE MID= MANAGER_ID;
    END IF;
END //
DELIMITER ;
CALL GETMRBYIDSS(5);

-- TO LIST EMPLOYEES FROM A SPECIFIC DEPARTMENTS
DELIMITER //
CREATE procedure DEPT(IN D varCHAR(10))
BEGIN
	IF D IS NULL THEN select 'DEPT NAME REQUIRED';
    ELSE SELECT * FROM EMPLOYE
    WHERE D=DEPARTMENT;
    END IF;
END //
DELIMITER ;
CALL DEPT('IT');

-- CREATE A PROCEDURE TO UPDATE THE EMPLOYEE SALARY
DELIMITER //
CREATE procedure UPDATESAL(IN EID INT, IN NEWSALARY decimal(10,2))
BEGIN
	UPDATE EMPLOYE SET SALARY = NEWSALARY
    WHERE EID= ID;
END //
DELIMITER ;
CALL UPDATESAL(2, 92000);

-- CREATE A PROCEDURE TO DELETE AN EMP_ID
DELIMITER //
CREATE procedure DELEMP(IN EID INT)
BEGIN 
	DELETE FROM EMPLOYE 
    WHERE EID = ID;
END //
DELIMITER ;
CALL DELEMP(2);
CALL GETALL_EMPLOYEES();

-- Write a procedure to insert a new employee into the Employee table. The procedure should take EmployeeID, Name, Department, and Salary as inputÂ parameters.